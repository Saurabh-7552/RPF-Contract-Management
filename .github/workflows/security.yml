name: Security Scan

on:
  schedule:
    - cron: '0 2 * * 1'  # Weekly on Monday at 2 AM
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v5
    
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install Python security tools
      run: |
        python -m pip install --upgrade pip
        pip install safety bandit semgrep
    
    - name: Install backend dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Install frontend dependencies
      run: |
        cd frontend
        npm ci
    
    - name: Run Python safety check
      run: |
        cd backend
        safety check -r requirements.txt --json --output safety-report.json || true
    
    - name: Run Python bandit security scan
      run: |
        cd backend
        bandit -r app/ -f json -o bandit-report.json || true
    
    - name: Run Semgrep security scan
      run: |
        cd backend
        semgrep --config=auto --json --output=semgrep-report.json . || true
    
    - name: Run npm audit
      run: |
        cd frontend
        npm audit --json > npm-audit-report.json || true
    
    - name: Run Snyk security scan
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=high --json-file-output=snyk-report.json
    
    - name: Upload security reports
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: security-reports-${{ github.run_number }}
        path: |
          backend/safety-report.json
          backend/bandit-report.json
          backend/semgrep-report.json
          frontend/npm-audit-report.json
          frontend/snyk-report.json
        retention-days: 30
    
    - name: Comment PR with security findings
      uses: actions/github-script@v6
      if: github.event_name == 'pull_request'
      with:
        script: |
          const fs = require('fs');
          
          let comment = '## 🔒 Security Scan Results\n\n';
          
          // Check for safety issues
          try {
            const safetyReport = JSON.parse(fs.readFileSync('backend/safety-report.json', 'utf8'));
            if (safetyReport.length > 0) {
              comment += '### ⚠️ Python Dependencies (Safety)\n';
              safetyReport.forEach(issue => {
                comment += `- **${issue.package}**: ${issue.advisory}\n`;
              });
              comment += '\n';
            }
          } catch (e) {
            comment += '### ✅ Python Dependencies (Safety)\nNo vulnerabilities found.\n\n';
          }
          
          // Check for bandit issues
          try {
            const banditReport = JSON.parse(fs.readFileSync('backend/bandit-report.json', 'utf8'));
            if (banditReport.results && banditReport.results.length > 0) {
              comment += '### ⚠️ Python Code Security (Bandit)\n';
              banditReport.results.forEach(issue => {
                comment += `- **${issue.test_name}** in ${issue.filename}:${issue.line_number}\n`;
              });
              comment += '\n';
            }
          } catch (e) {
            comment += '### ✅ Python Code Security (Bandit)\nNo issues found.\n\n';
          }
          
          // Check for npm audit issues
          try {
            const npmAuditReport = JSON.parse(fs.readFileSync('frontend/npm-audit-report.json', 'utf8'));
            if (npmAuditReport.vulnerabilities && Object.keys(npmAuditReport.vulnerabilities).length > 0) {
              comment += '### ⚠️ Node.js Dependencies (npm audit)\n';
              Object.values(npmAuditReport.vulnerabilities).forEach(vuln => {
                comment += `- **${vuln.name}**: ${vuln.severity} - ${vuln.title}\n`;
              });
              comment += '\n';
            }
          } catch (e) {
            comment += '### ✅ Node.js Dependencies (npm audit)\nNo vulnerabilities found.\n\n';
          }
          
          comment += '---\n*Security scan completed. Please review any findings above.*';
          
          github.rest.issues.createComment({
            issue_number: context.issue.number,
            owner: context.repo.owner,
            repo: context.repo.repo,
            body: comment
          });

